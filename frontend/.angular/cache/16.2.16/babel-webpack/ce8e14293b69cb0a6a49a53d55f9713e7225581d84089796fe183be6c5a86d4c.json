{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { TextBlockComponent } from './text-block.component';\nimport { SocialIconsComponent } from './social-icons.component';\nimport { AvatarComponent } from './avatar.component';\nimport { AvatarWithTextComponent } from './avatar-with-text.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction DynamicTemplateComponent_div_1_sig_avatar_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sig-avatar\", 8);\n  }\n  if (rf & 2) {\n    const component_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r2.userData.logo)(\"shape\", component_r1.props.shape)(\"size\", component_r1.props.size)(\"border\", component_r1.props.border)(\"customStyles\", component_r1.styles);\n  }\n}\nfunction DynamicTemplateComponent_div_1_sig_avatar_with_text_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sig-avatar-with-text\", 9);\n  }\n  if (rf & 2) {\n    const component_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r3.userData.logo)(\"shape\", component_r1.props.shape)(\"size\", component_r1.props.size)(\"border\", component_r1.props.border)(\"userData\", ctx_r3.userData)(\"containerStyles\", component_r1.styles)(\"nameStyles\", component_r1.props.nameStyles)(\"titleStyles\", component_r1.props.titleStyles);\n  }\n}\nfunction DynamicTemplateComponent_div_1_sig_text_block_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sig-text-block\", 10);\n  }\n  if (rf & 2) {\n    const component_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"fields\", component_r1.props.fields)(\"userData\", ctx_r4.userData)(\"fieldStyles\", ctx_r4.getFieldStyles(component_r1))(\"containerStyles\", ctx_r4.getComponentStyles(component_r1))(\"templateId\", ctx_r4.templateConfig.id)(\"primaryColor\", ctx_r4.designOptions.primaryColor);\n  }\n}\nfunction DynamicTemplateComponent_div_1_sig_social_icons_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sig-social-icons\", 11);\n  }\n  if (rf & 2) {\n    const component_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵstyleMap(component_r1.props.style);\n    i0.ɵɵproperty(\"userData\", ctx_r5.userData)(\"size\", component_r1.props.size)(\"containerStyles\", component_r1.styles);\n  }\n}\nfunction DynamicTemplateComponent_div_1_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 12);\n  }\n  if (rf & 2) {\n    const component_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngStyle\", component_r1.styles);\n  }\n}\nfunction DynamicTemplateComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtemplate(1, DynamicTemplateComponent_div_1_sig_avatar_1_Template, 1, 5, \"sig-avatar\", 3);\n    i0.ɵɵtemplate(2, DynamicTemplateComponent_div_1_sig_avatar_with_text_2_Template, 1, 8, \"sig-avatar-with-text\", 4);\n    i0.ɵɵtemplate(3, DynamicTemplateComponent_div_1_sig_text_block_3_Template, 1, 6, \"sig-text-block\", 5);\n    i0.ɵɵtemplate(4, DynamicTemplateComponent_div_1_sig_social_icons_4_Template, 1, 5, \"sig-social-icons\", 6);\n    i0.ɵɵtemplate(5, DynamicTemplateComponent_div_1_div_5_Template, 1, 1, \"div\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const component_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngStyle\", component_r1.position);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", component_r1.type === \"avatar\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", component_r1.type === \"avatar-with-text\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", component_r1.type === \"text\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", component_r1.type === \"social\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", component_r1.type === \"divider\");\n  }\n}\nlet DynamicTemplateComponent = /*#__PURE__*/(() => {\n  class DynamicTemplateComponent {\n    constructor() {\n      this.userData = {};\n      this.designOptions = {};\n    }\n    getContainerStyles() {\n      return {\n        ...this.templateConfig.containerStyles,\n        fontFamily: this.designOptions.fontFamily || this.templateConfig.containerStyles.fontFamily,\n        fontSize: this.designOptions.fontSize ? `${this.designOptions.fontSize}px` : this.templateConfig.containerStyles.fontSize,\n        color: this.designOptions.primaryColor || '#000000',\n        overflow: 'hidden',\n        wordWrap: 'break-word'\n      };\n    }\n    getComponentStyles(component) {\n      const baseStyles = component.styles || {};\n      if (component.type === 'text') {\n        return {\n          ...baseStyles,\n          color: this.designOptions.primaryColor || baseStyles.color\n        };\n      }\n      return baseStyles;\n    }\n    getFieldStyles(component) {\n      if (component.type !== 'text') return component.props.fieldStyles || {};\n      const fieldStyles = component.props.fieldStyles || {};\n      const updatedStyles = {};\n      Object.keys(fieldStyles).forEach(field => {\n        const baseFontSize = this.designOptions.fontSize || 14;\n        updatedStyles[field] = {\n          ...fieldStyles[field],\n          color: this.designOptions.primaryColor || fieldStyles[field]?.color || '#000000',\n          fontFamily: this.designOptions.fontFamily || fieldStyles[field]?.fontFamily\n        };\n        // Apply relative font sizes with proper scaling\n        if (field === 'company') {\n          updatedStyles[field] = {\n            ...updatedStyles[field],\n            fontSize: `${Math.min(baseFontSize + 4, 22)}px`,\n            fontWeight: 'bold',\n            letterSpacing: '2px',\n            marginBottom: '10px',\n            lineHeight: '1.2'\n          };\n        } else {\n          updatedStyles[field] = {\n            ...updatedStyles[field],\n            fontSize: `${Math.min(baseFontSize, 16)}px`,\n            lineHeight: '1.4'\n          };\n        }\n      });\n      return updatedStyles;\n    }\n    static {\n      this.ɵfac = function DynamicTemplateComponent_Factory(t) {\n        return new (t || DynamicTemplateComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: DynamicTemplateComponent,\n        selectors: [[\"dynamic-template\"]],\n        inputs: {\n          templateConfig: \"templateConfig\",\n          userData: \"userData\",\n          designOptions: \"designOptions\"\n        },\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 2,\n        vars: 2,\n        consts: [[1, \"template-container\", 3, \"ngStyle\"], [\"class\", \"component-wrapper\", 3, \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [1, \"component-wrapper\", 3, \"ngStyle\"], [3, \"src\", \"shape\", \"size\", \"border\", \"customStyles\", 4, \"ngIf\"], [3, \"src\", \"shape\", \"size\", \"border\", \"userData\", \"containerStyles\", \"nameStyles\", \"titleStyles\", 4, \"ngIf\"], [3, \"fields\", \"userData\", \"fieldStyles\", \"containerStyles\", \"templateId\", \"primaryColor\", 4, \"ngIf\"], [3, \"userData\", \"style\", \"size\", \"containerStyles\", 4, \"ngIf\"], [\"class\", \"divider\", 3, \"ngStyle\", 4, \"ngIf\"], [3, \"src\", \"shape\", \"size\", \"border\", \"customStyles\"], [3, \"src\", \"shape\", \"size\", \"border\", \"userData\", \"containerStyles\", \"nameStyles\", \"titleStyles\"], [3, \"fields\", \"userData\", \"fieldStyles\", \"containerStyles\", \"templateId\", \"primaryColor\"], [3, \"userData\", \"size\", \"containerStyles\"], [1, \"divider\", 3, \"ngStyle\"]],\n        template: function DynamicTemplateComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0);\n            i0.ɵɵtemplate(1, DynamicTemplateComponent_div_1_Template, 6, 6, \"div\", 1);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"ngStyle\", ctx.getContainerStyles());\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngForOf\", ctx.templateConfig.components);\n          }\n        },\n        dependencies: [CommonModule, i1.NgForOf, i1.NgIf, i1.NgStyle, TextBlockComponent, SocialIconsComponent, AvatarComponent, AvatarWithTextComponent],\n        styles: [\".template-container[_ngcontent-%COMP%]{font-family:Arial,sans-serif;max-width:600px}.component-wrapper[_ngcontent-%COMP%]{position:relative}.divider[_ngcontent-%COMP%]{width:1px;background:#000;height:100%}\"]\n      });\n    }\n  }\n  return DynamicTemplateComponent;\n})();\nexport { DynamicTemplateComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}